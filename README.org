* Affecting the environment

  Two low-level commands are used to add and remove functionality from
  the environment by affecting variables such as $PATH, $MANPATH,
  $LD_LIBRARY_PATH, etc.  They are:

  + employ HASH

    Causes PACKAGE to be added to the environment by finding the
    $SPOCK_VAR/installed/HASH.yaml file and processing the
    "environment" section, appending HASH to the end of the
    $SPOCK_EMPLOYED list.  It recursively employs each dependency.

    Employment fails if the $SPOCK_EMPLOYED list would contain two
    installations of the same package, e.g., two installations of
    Boost.

  + fire HASH

    Repeatedly removes items from the end of $SPOCK_EMPLOYED until it
    has removed HASH from that list.  It is an error if HASH is not
    initially present.

    For each HASH removed from the list, it reads the
    $SPOCK_VAR/installed/HASH.yaml file and processes the
    "environment" hash, undoing what "employ" had done earlier.


  In both these cases, PACKAGE is the name of a configuration file for
  an installation of a particular software package.

*** Environment variables

***** SPOCK_EMPLOYED

      Space-separated list of all packages that are currently
      employed.  These are the base names of the installation
      configuration files.


*** Installation configuration files

    Stored in $SPOCK_VAR/installed/HASH.yaml

    The "HASH" part is what are listed in $SPOCK_EMPLOYED.

    An example file for yamlcpp, stored in $SPOCK_VAR/installed/4a8c6215.yaml

     1|package: yaml-cpp
     2|version: 0.5.1
     3|dependencies:
     4|  - hash: ef1c02db
     5|    package: boost
     6|    version: 1.62.0
     7|  - hash: 1083d0de
     8|    package: gcc
     9|    version: 5.4.0
    10|  - flag: release
    11|  - flag: c++03
    12|environment:
    13|  PATH:            $SPOCK_VAR/installed/4a8c6215/bin
    14|  LD_LIBRARY_PATH: $SPOCK_VAR/installed/4a8c6215/lib
    15|  MANPATH:         $SPOCK_VAR/installed/4a8c6215/man
    16|timestamp: 2016-12-22 13:10:39
